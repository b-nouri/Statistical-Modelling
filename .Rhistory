breaks = c("red", "blue", "green"),
labels = c("Piecewise linear function", "Cubic spline with Truncated Polynomial basis Function", "Cubic Smoothing Spline (MGCV::GAM)"),
guide = "legend") +
labs(title = "Estimate of the mean using 3 different estimators") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5)) +
theme(legend.position="right")
fit3 <- spm(y~ f(day,basis="radial",degree=4),spar.method = "ML")
log.likelihood <- fit3$fit$logLik
total.df <- sum(fit3$aux$df)
AICsemipar2 <- -2 * (log.likelihood - total.df)
AICsemipar2
fit3 <- spm(y~ f(day,basis="radial",degree=2),spar.method = "ML")
log.likelihood <- fit3$fit$logLik
total.df <- sum(fit3$aux$df)
AICsemipar2 <- -2 * (log.likelihood - total.df)
AICsemipar2
fit3 <- spm(y~ f(day,basis="radial",degree=1),spar.method = "ML")
log.likelihood <- fit3$fit$logLik
total.df <- sum(fit3$aux$df)
AICsemipar2 <- -2 * (log.likelihood - total.df)
AICsemipar2
fit3 <- spm(y~ f(day,basis="radial",degree=3),spar.method = "ML")
log.likelihood <- fit3$fit$logLik
total.df <- sum(fit3$aux$df)
AICsemipar2 <- -2 * (log.likelihood - total.df)
AICsemipar2
library(ggplot2)
ggplot(mydataA,aes(day,y)) +
geom_point() +
geom_line(aes(y=fit1$fitted.values,colour = "red")) +
geom_line(aes(y=fit2$fit$fitted,colour = "blue")) +
geom_line(aes(y=fit3$fit$fitted,colour = "green")) +
labs(x = "Day") +
labs(y = "Log of new cases") +
scale_color_identity(name = "Fitted Models",
breaks = c("red", "blue", "green"),
labels = c("Piecewise linear function", "Cubic spline with Truncated Polynomial basis Function", "Cubic Smoothing Spline (MGCV::GAM)"),
guide = "legend") +
labs(title = "Estimate of the mean using 3 different estimators") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5)) +
theme(legend.position="right")
library(ggplot2)
ggplot(mydataA,aes(day,y)) +
geom_point() +
geom_line(aes(y=fit1$fitted.values,colour = "red")) +
geom_line(aes(y=fit2$fit$fitted,colour = "blue")) +
geom_line(aes(y=fit3$fit$fitted,colour = "green")) +
labs(x = "Day") +
labs(y = "Log of new cases") +
scale_color_identity(name = "Fitted Models",
breaks = c("red", "blue", "green"),
labels = c("Piecewise linear function", "Cubic spline with Truncated Polynomial basis Function", "Cubic Smoothing Spline (MGCV::GAM)"),
guide = "legend") +
labs(title = "Estimate of the mean using 3 different estimators") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5)) +
theme(legend.position="right")
fit3 <- spm(y~ f(day,basis="radial",degree=3),spar.method = "ML")
log.likelihood <- fit3$fit$logLik
total.df <- sum(fit3$aux$df)
AICsemipar2 <- -2 * (log.likelihood - total.df)
AICsemipar2
ggplot(mydataA,aes(day,y)) +
geom_point() +
geom_line(aes(y=fit1$fitted.values,colour = "red")) +
geom_line(aes(y=fit2$fit$fitted,colour = "blue")) +
geom_line(aes(y=fit3$fit$fitted,colour = "green")) +
labs(x = "Day") +
labs(y = "Log of new cases") +
scale_color_identity(name = "Fitted Models",
breaks = c("red", "blue", "green"),
labels = c("Piecewise linear function", "Cubic spline with Truncated Polynomial basis Function", "Cubic Smoothing Spline (MGCV::GAM)"),
guide = "legend") +
labs(title = "Estimate of the mean using 3 different estimators") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5)) +
theme(legend.position="right")
library(dplyr)
DataQA = read.table("D:\\covidDATA.txt")
modulo11=function(x) {x- floor(x/11)*11}
studentnumber=0772586 # fill in your student number here, this is an example!
mycol=modulo11(studentnumber)
mydataA=DataQA[,c((1+mycol*4):(4+mycol*4))]
mydataA <- mutate(mydataA,day= as.numeric(mydataA$DATE.1))
mydataA <- mutate(mydataA,y= log(mydataA$NEW_IN.1+1))
attach(mydataA)
plot(day,y)
#--------------Fit 1 - Piecewise linear function-------------
fit1 <- lm(y~day+pmax(day-12,0)+pmax(day-19,0))
AIC(fit1)
plot(day,y)
lines(day,fit1$fitted.values)
summary(fit1)
#--------------Fit 2 - Cubic spline with Truncated Polynomial basis Function -------------
library(SemiPar)
fit2 <- spm(y~ f(day,basis="trunc.poly",degree=3),spar.method = "ML")
log.likelihood <- fit2$fit$logLik
total.df <- sum(fit2$aux$df)
AICsemipar <- -2 * (log.likelihood - total.df)
AICsemipar
fit2$fit$coefficients
fit2$info$pen$knots
fit2$fit$coef
summary(fit2)
#--------------Fit 3 - Cubic spline with radial basis Function--------------------
fit3 <- spm(y~ f(day,basis="radial",degree=3),spar.method = "ML")
log.likelihood <- fit3$fit$logLik
total.df <- sum(fit3$aux$df)
AICsemipar2 <- -2 * (log.likelihood - total.df)
AICsemipar2
fit3$fit$coefficients
fit3$info$pen$knots
fit3$fit$coef
#------------------Plotting all the fitted means in one plot----------------------------
library(ggplot2)
ggplot(mydataA,aes(day,y)) +
geom_point() +
geom_line(aes(y=fit1$fitted.values,colour = "red")) +
geom_line(aes(y=fit2$fit$fitted,colour = "blue")) +
geom_line(aes(y=fit3$fit$fitted,colour = "green")) +
labs(x = "Day") +
labs(y = "Log of new cases") +
scale_color_identity(name = "Fitted Models",
breaks = c("red", "blue", "green"),
labels = c("Piecewise linear function", "Cubic spline with Truncated Polynomial basis Function", "Cubic spline with radial basis Function"),
guide = "legend") +
labs(title = "Estimate of the mean using 3 different estimators") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5)) +
theme(legend.position="right")
fit2$info$pen$knots
fit3$info$pen$knots
fit3$fit$coefficients
fit2$fit$coefficients
fit3 <- spm(y~ f(day,basis="radial",degree=2),spar.method = "ML")
log.likelihood <- fit3$fit$logLik
total.df <- sum(fit3$aux$df)
AICsemipar2 <- -2 * (log.likelihood - total.df)
AICsemipar2
fit3 <- spm(y~ f(day,basis="radial",degree=3),spar.method = "ML")
log.likelihood <- fit3$fit$logLik
total.df <- sum(fit3$aux$df)
AICsemipar2 <- -2 * (log.likelihood - total.df)
AICsemipar2
fit3 <- spm(y~ f(day,basis="radial",degree=3),spar.method = "ML")
log.likelihood <- fit3$fit$logLik
total.df <- sum(fit3$aux$df)
AICsemipar2 <- -2 * (log.likelihood - total.df)
AICsemipar2
ggplot(mydataA,aes(day,y)) +
geom_point() +
geom_line(aes(y=fit1$fitted.values,colour = "red")) +
geom_line(aes(y=fit2$fit$fitted,colour = "blue")) +
geom_line(aes(y=fit3$fit$fitted,colour = "green")) +
labs(x = "Day") +
labs(y = "Log of new cases") +
scale_color_identity(name = "Fitted Models",
breaks = c("red", "blue", "green"),
labels = c("Piecewise linear function", "Cubic spline with Truncated Polynomial basis Function", "Cubic spline with radial basis Function"),
guide = "legend") +
labs(title = "Estimate of the mean using 3 different estimators") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5)) +
theme(legend.position="right")
z1 <- predict(fit1, mydataA, se.fit = TRUE)
alpha <- 0.99
qt1 <- c(-1, 1) * qt((1 - alpha) / 2, 56-fit1$df, lower.tail = FALSE)
CI1 <- z1$fit + outer(z1$se.fit, qt1)
colnames(CI1) <- c("lower", "upper")
CI1 <- as.data.frame(CI1)
ggplot(mydataA,aes(day,y)) +
geom_point() +
geom_line(aes(day,fit1$fitted.values),col="green") +
geom_line(aes(day,CI1$lower)) +
geom_line(aes(day,CI1$upper)) +
labs(x = "Day") +
labs(y = "Log of new cases") +
labs(title = "Confidence Intervals for Fit3: Degree 3 polynomial using lm function") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
z1 <- predict(fit1, mydataA, se.fit = TRUE)
alpha <- 0.99
qt1 <- c(-1, 1) * qt((1 - alpha) / 2, 56-fit1$df, lower.tail = FALSE)
CI1 <- z1$fit + outer(z1$se.fit, qt1)
colnames(CI1) <- c("lower", "upper")
CI1 <- as.data.frame(CI1)
ggplot(mydataA,aes(day,y)) +
geom_point() +
geom_line(aes(day,fit1$fitted.values),col="green") +
geom_line(aes(day,CI1$lower)) +
geom_line(aes(day,CI1$upper)) +
labs(x = "Day") +
labs(y = "Log of new cases") +
labs(title = "Confidence Intervals for Fit1: Piecewise linear function") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
z2 <- predict.spm(fit2, mydataA, se = TRUE)
alpha <- 0.99
qt2 <- c(-1, 1) * qt((1 - alpha) / 2, fit2$aux$df.res, lower.tail = FALSE)
CI2 <- z2$fit + outer(z2$se, qt2)
colnames(CI2) <- c("lower", "upper")
CI2 <- as.data.frame(CI2)
ggplot(mydataA,aes(day,y)) +
geom_point() +
geom_line(aes(day,fit2$fit$fitted),col="pink") +
geom_line(aes(day,CI2$lower)) +
geom_line(aes(day,CI2$upper)) +
labs(x = "Day") +
labs(y = "Log of new cases") +
labs(title = "Confidence Intervals for Fit2: Cubic spline with Truncated Polynomial basis Function") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
z3 <- predict(fit3, mydataA, se.fit = TRUE)
alpha <- 0.99
qt3 <- c(-1, 1) * qt((1 - alpha) / 2, fit3$aux$df.res, lower.tail = FALSE)
CI3 <- as.vector(z3$fit) + outer(z3$se.fit, qt3)
colnames(CI3) <- c("lower", "upper")
CI3 <- as.data.frame(CI4)
ggplot(mydataA,aes(day,y)) +
geom_point() +
geom_line(aes(day,fit3$fit$fitted),col="blue") +
geom_line(aes(day,CI3$lower)) +
geom_line(aes(day,CI3$upper)) +
labs(x = "Day") +
labs(y = "Log of new cases") +
labs(title = "Confidence Intervals for Fit3: Cubic spline with radial basis Function") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
z3 <- predict(fit3, mydataA, se.fit = TRUE)
alpha <- 0.99
qt3 <- c(-1, 1) * qt((1 - alpha) / 2, fit3$aux$df.res, lower.tail = FALSE)
z3 <- predict(fit3, mydataA, se.fit = TRUE)
alpha <- 0.99
qt3 <- c(-1, 1) * qt((1 - alpha) / 2, fit3$aux$df.res, lower.tail = FALSE)
CI3 <- as.vector(z3$fit) + outer(z3$se.fit, qt3)
colnames(CI3) <- c("lower", "upper")
CI3 <- as.data.frame(CI3)
ggplot(mydataA,aes(day,y)) +
geom_point() +
geom_line(aes(day,fit3$fit$fitted),col="blue") +
geom_line(aes(day,CI3$lower)) +
geom_line(aes(day,CI3$upper)) +
labs(x = "Day") +
labs(y = "Log of new cases") +
labs(title = "Confidence Intervals for Fit3: Cubic spline with radial basis Function") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
z3 <- predict(fit3, mydataA, se.fit = TRUE)
alpha <- 0.99
qt3 <- c(-1, 1) * qt((1 - alpha) / 2, fit3$aux$df.res, lower.tail = FALSE)
CI3 <- as.vector(z3$fit) + outer(z3$se.fit, qt3)
colnames(CI3) <- c("lower", "upper")
CI3 <- as.data.frame(CI3)
z3 <- predict(fit3, mydataA, se.fit = TRUE)
alpha <- 0.99
qt3 <- c(-1, 1) * qt((1 - alpha) / 2, fit3$aux$df.res, lower.tail = FALSE)
CI3 <- as.vector(z3$fit) + outer(z3$se.fit, qt3)
colnames(CI3) <- c("lower", "upper")
CI3 <- as.data.frame(CI3)
z3 <- predict(fit3, mydataA, se.fit = TRUE)
alpha <- 0.99
qt3 <- c(-1, 1) * qt((1 - alpha) / 2, fit3$aux$df.res, lower.tail = FALSE)
CI3 <- as.vector(z3$fit) + outer(z3$se.fit, qt3)
qt3 <- c(-1, 1) * qt((1 - alpha) / 2, fit3$aux$df.res, lower.tail = FALSE)
z3 <- predict(fit3, mydataA, se.fit = TRUE)
alpha <- 0.99
qt3 <- c(-1, 1) * qt((1 - alpha) / 2, fit3$aux$df.res, lower.tail = FALSE)
CI3 <- as.vector(z3$fit) + outer(z3$se.fit, qt3)
colnames(CI3) <- c("lower", "upper")
CI3 <- as.data.frame(CI3)
z3 <- predict(fit3, mydataA, se.fit = TRUE)
alpha <- 0.99
qt3 <- c(-1, 1) * qt((1 - alpha) / 2, fit3$aux$df.res, lower.tail = FALSE)
CI3 <- as.vector(z3$fit) + outer(z3$se.fit, qt3)
CI3 <- z3$fit + outer(z3$se, qt3)
z3 <- predict(fit3, mydataA, se.fit = TRUE)
alpha <- 0.99
qt3 <- c(-1, 1) * qt((1 - alpha) / 2, fit3$aux$df.res, lower.tail = FALSE)
CI3 <- z3$fit + outer(z3$se, qt3)
z3 <- predict.spm(fit3, mydataA, se = TRUE)
alpha <- 0.99
qt3 <- c(-1, 1) * qt((1 - alpha) / 2, fit3$aux$df.res, lower.tail = FALSE)
CI3 <- z3$fit + outer(z3$se, qt3)
colnames(CI3) <- c("lower", "upper")
CI3 <- as.data.frame(CI3)
ggplot(mydataA,aes(day,y)) +
geom_point() +
geom_line(aes(day,fit3$fit$fitted),col="blue") +
geom_line(aes(day,CI3$lower)) +
geom_line(aes(day,CI3$upper)) +
labs(x = "Day") +
labs(y = "Log of new cases") +
labs(title = "Confidence Intervals for Fit3: Cubic spline with radial basis Function") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
library(dplyr)
DataQA = read.table("D:\\covidDATA.txt")
modulo11=function(x) {x- floor(x/11)*11}
studentnumber=0772586 # fill in your student number here, this is an example!
mycol=modulo11(studentnumber)
mydataA=DataQA[,c((1+mycol*4):(4+mycol*4))]
mydataA <- mutate(mydataA,day= as.numeric(mydataA$DATE.1))
mydataA <- mutate(mydataA,y= log(mydataA$NEW_IN.1+1))
attach(mydataA)
plot(day,y)
#--------------Fit 1 - Piecewise linear function-------------
fit1 <- lm(y~day+pmax(day-12,0)+pmax(day-19,0))
AIC(fit1)
plot(day,y)
lines(day,fit1$fitted.values)
summary(fit1)
#--------------Fit 2 - Cubic spline with Truncated Polynomial basis Function -------------
library(SemiPar)
fit2 <- spm(y~ f(day,basis="trunc.poly",degree=3),spar.method = "ML")
log.likelihood <- fit2$fit$logLik
total.df <- sum(fit2$aux$df)
AICsemipar <- -2 * (log.likelihood - total.df)
AICsemipar
fit2$fit$coefficients
fit2$info$pen$knots
fit2$fit$coef
summary(fit2)
#--------------Fit 3 - Cubic spline with radial basis Function--------------------
fit3 <- spm(y~ f(day,basis="radial",degree=3),spar.method = "ML")
log.likelihood <- fit3$fit$logLik
total.df <- sum(fit3$aux$df)
AICsemipar2 <- -2 * (log.likelihood - total.df)
AICsemipar2
fit3$fit$coefficients
fit3$info$pen$knots
fit3$fit$coef
#------------------Plotting all the fitted means in one plot----------------------------
library(ggplot2)
ggplot(mydataA,aes(day,y)) +
geom_point() +
geom_line(aes(y=fit1$fitted.values,colour = "red")) +
geom_line(aes(y=fit2$fit$fitted,colour = "blue")) +
geom_line(aes(y=fit3$fit$fitted,colour = "green")) +
labs(x = "Day") +
labs(y = "Log of new cases") +
scale_color_identity(name = "Fitted Models",
breaks = c("red", "blue", "green"),
labels = c("Piecewise linear function", "Cubic spline with Truncated Polynomial basis Function", "Cubic spline with radial basis Function"),
guide = "legend") +
labs(title = "Estimate of the mean using 3 different estimators") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5)) +
theme(legend.position="bottom")
library(dplyr)
DataQA = read.table("D:\\covidDATA.txt")
modulo11=function(x) {x- floor(x/11)*11}
studentnumber=0772586 # fill in your student number here, this is an example!
mycol=modulo11(studentnumber)
mydataA=DataQA[,c((1+mycol*4):(4+mycol*4))]
mydataA <- mutate(mydataA,day= as.numeric(mydataA$DATE.1))
mydataA <- mutate(mydataA,y= log(mydataA$NEW_IN.1+1))
attach(mydataA)
plot(day,y)
#--------------Fit 1 - Piecewise linear function-------------
fit1 <- lm(y~day+pmax(day-12,0)+pmax(day-19,0))
AIC(fit1)
plot(day,y)
lines(day,fit1$fitted.values)
summary(fit1)
#--------------Fit 2 - Cubic spline with Truncated Polynomial basis Function -------------
library(SemiPar)
fit2 <- spm(y~ f(day,basis="trunc.poly",degree=3),spar.method = "ML")
log.likelihood <- fit2$fit$logLik
total.df <- sum(fit2$aux$df)
AICsemipar <- -2 * (log.likelihood - total.df)
AICsemipar
fit2$fit$coefficients
fit2$info$pen$knots
fit3 <- spm(y~ f(day,basis="radial",degree=3),spar.method = "ML")
log.likelihood <- fit3$fit$logLik
total.df <- sum(fit3$aux$df)
AICsemipar2 <- -2 * (log.likelihood - total.df)
AICsemipar2
library(SemiPar)
fit2 <- spm(y~ f(day,basis="trunc.poly",degree=3),spar.method = "ML")
log.likelihood <- fit2$fit$logLik
total.df <- sum(fit2$aux$df)
AICspm <- -2 * (log.likelihood - total.df)
AICspm
fit3 <- spm(y~ f(day,basis="radial",degree=3),spar.method = "ML")
log.likelihood <- fit3$fit$logLik
total.df <- sum(fit3$aux$df)
AICspm2 <- -2 * (log.likelihood - total.df)
AICspm2
fit3$fit$coefficients
fit3$info$pen$knots
fit3$fit$coefficients
fit3$info$pen$knots
DataQB = read.table("D:\\BankDefaultData.txt",header=T)
studentnumber = 772586 # fill in your student number here, this is an example!
set.seed(studentnumber)
rownumbers = sample(1:6436,size=1000)
mydataB = DataQB[rownumbers,]
DataQB = read.table("D:\\BankDefaultData.txt",header=T)
studentnumber = 772586 # fill in your student number here, this is an example!
set.seed(studentnumber)
rownumbers = sample(1:6436,size=1000)
mydataB = DataQB[rownumbers,]
View(mydataB)
mydataB$Term<-as.factor(mydataB$Term)
attach(mydataB)
library(gam)
library(MASS)
library(SemiPar)
fit1 <- glm(Default~.,data=mydataB, family = "binomial")
library(mgcv)
fit3=gam(Default~s(Income)+s(Loan)+s(Age)+s(Employment)+s(Adress)+Phone+Customer+
Term+s(Limit)+Gender+Education+Children, family="binomial")
summary(fit3)
AIC(fit3)
fit3$coefficients
DataQB = read.table("D:\\BankDefaultData.txt",header=T)
studentnumber = 772586 # fill in your student number here, this is an example!
set.seed(studentnumber)
rownumbers = sample(1:6436,size=1000)
mydataB = DataQB[rownumbers,]
mydataB$Default<-as.factor(mydataB$Default)
mydataB$Gender<-as.factor(mydataB$Gender)
mydataB$Education<-as.factor(mydataB$Education)
mydataB$Phone<-as.factor(mydataB$Phone)
mydataB$Customer<-as.factor(mydataB$Customer)
mydataB$Term<-as.factor(mydataB$Term)
attach(mydataB)
library(gam)
library(MASS)
library(SemiPar)
fit1 <- glm(Default~.,data=mydataB, family = "binomial")
summary(fit1)
fit1 <- glm(Default~.,data=mydataB, family = "binomial",link="logit")
fit1 <- glm(Default~.,data=mydataB, family = binomial(link="logit"))
summary(fit1)
fit2 <- stepAIC(fit1, dirction="both",scope=list(upper=~.,lower=~1))
summary(fit1_LM)
summary(fit2)
fit3 <- stepAIC(fit1, dirction="both",scope=list(upper=~.^2,lower=~1))
summary(fit2_LM)
summary(fit3)
DataQC = read.table("D:\\bikestations.txt")
digitsum = function(x) sum(floor(x/10^(0:(nchar(x)-1)))%%10)
studentnumber=772586 # fill in your student number here, this is an example!
mysum = digitsum(studentnumber)
Y = DataQC[,mysum]
X = DataQC[,-mysum]
library(glmnet)
X=as.matrix(X)
fit1=cv.glmnet(X,Y, family = "poisson", nfold=7, alpha=0)
fit1$lambda.min
coef(fit1, s=fit1$lambda.min)
print(fit1)
fit1$lambda.min
coef(fit1, s=fit1$lambda.min)
fit2=cv.glmnet(X,Y, family = "poisson", nfold=7, alpha=1)
fit2$lambda.min
coef(fit2, s=fit2$lambda.min)
print(fit2)
fit3=cv.glmnet(X,Y, family = "poisson", nfold=7, alpha=0.6)
fit3$lambda.min
coef(fit3, s=fit3$lambda.min)
print(fit3)
fit4=cv.glmnet(X,Y, family = "poisson", nfold=7, alpha=0.1)
fit4$lambda.min
coef(fit4, s=fit4$lambda.min)
print(fit4)
fit1=cv.glmnet(X,Y, family = "poisson", nfold=7, alpha=0)
fit1$lambda.min
coef(fit1, s=fit1$lambda.min)
fit2=cv.glmnet(X,Y, family = "poisson", nfold=7, alpha=1)
fit2$lambda.min
coef(fit2, s=fit2$lambda.min)
fit3=cv.glmnet(X,Y, family = "poisson", nfold=7, alpha=0.6)
fit3$lambda.min
coef(fit3, s=fit3$lambda.min)
fit4=cv.glmnet(X,Y, family = "poisson", nfold=7, alpha=0.1)
fit4$lambda.min
coef(fit4, s=fit4$lambda.min)
fit1$lambda.min
fit2$lambda.min
fit3$lambda.min
fit4$lambda.min
View(mydataB)
View(DataQC)
CI<- confint(fit1_LM,level = 0.99)
CI<- confint(fit1,level = 0.99)
DataQB = read.table("D:\\BankDefaultData.txt",header=T)
studentnumber = 772586 # fill in your student number here, this is an example!
set.seed(studentnumber)
rownumbers = sample(1:6436,size=1000)
mydataB = DataQB[rownumbers,]
attach(mydataB)
library(gam)
fit1 <- glm(Default~.,data=mydataB, family = binomial(link="logit"))
summary(fit1)
fit2 <- stepAIC(fit1, dirction="both",scope=list(upper=~.,lower=~1))
summary(fit2)
fit3 <- stepAIC(fit1, dirction="both",scope=list(upper=~.^2,lower=~1))
summary(fit3)
CI<- confint(fit1,level = 0.99)
CI
PostAIC(y= mydataB$Default,X=mydataB[,-3],model.set = "allsubsets", quant=0.99,
common=c(),intercept=T,family="binomial", Pi=NULL)
source('C:/Users/User - PC/OneDrive/Master of Bsuiness engineering - KULeuven/Statistical Modelling/Exam/PostAICupdate(2).R')
PostAIC(y= mydataB$Default,X=mydataB[,-3],model.set = "allsubsets", quant=0.99,
common=c(),intercept=T,family="binomial", Pi=NULL)
CI<- confint(fit2,level = 0.99)
CI
