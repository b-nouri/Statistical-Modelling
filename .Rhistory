DataQB = read.table("D:\\BankDefaultData.txt",header=T)
studentnumber = 772586 # fill in your student number here, this is an example!
set.seed(studentnumber)
rownumbers = sample(1:6436,size=1000)
mydataB = DataQB[rownumbers,]
View(DataQB)
View(mydataB)
View(mydataB)
DataQA = read.table("D:\\covidDATA.txt")
modulo11=function(x) {x- floor(x/11)*11}
studentnumber=772586 # fill in your student number here, this is an example!
mycol=modulo11(studentnumber)
mydataA=DataQA[,c((1+mycol*4):(4+mycol*4))]
View(DataQA)
View(mydataA)
View(DataQA)
View(mydataA)
library(dplyr)
?mutate()
mutate(mydataA,day = as.numeric(mydataA$DATE.1))
mydataA <- mutate(mydataA,day = as.numeric(mydataA$DATE.1))
mydataA <- mutate(mydataA,day = as.numeric(mydataA$DATE.1))
library(dplyr)
DataQA = read.table("D:\\covidDATA.txt")
modulo11=function(x) {x- floor(x/11)*11}
studentnumber=772586 # fill in your student number here, this is an example!
mycol=modulo11(studentnumber)
mydataA=DataQA[,c((1+mycol*4):(4+mycol*4))]
mydataA <- mutate(mydataA,DAY = as.numeric(mydataA$DATE.1))
plot(mydataA$DAY,mydataA$NEW_IN.1)
plot(mydataA$DAY,log(mydataA$NEW_IN.1))
plot(mydataA$DAY,log(mydataA$NEW_IN.1))
View(DataQA)
View(mydataA)
mydataA <- mutate(mydataA,DAY = as.numeric(mydataA$DATE.1))
plot(mydataA$DAY,log(mydataA$NEW_IN.1))
library(dplyr)
DataQA = read.table("D:\\covidDATA.txt")
modulo11=function(x) {x- floor(x/11)*11}
studentnumber=772586 # fill in your student number here, this is an example!
mycol=modulo11(studentnumber)
mydataA=DataQA[,c((1+mycol*4):(4+mycol*4))]
mydataA <- mutate(mydataA,DAY = as.numeric(mydataA$DATE.1))
plot(mydataA$DAY,log(mydataA$NEW_IN.1+1))
mydataA <- mutate(mydataA,Y= log(mydataA$NEW_IN.1+1))
plot(mydataA$DAY,Y)
plot(mydataA$DAY,mydataA$Y)
fit1= glm(Y~DAY,family = "poission",data=mydataA)
?glm
fit1= glm(Y~DAY,family = poission ,data=mydataA)
fit1= glm(Y~DAY,family = poission ,data=mydataA)
fit1= glm(Y~DAY,family = poisson ,data=mydataA)
warnings()
plot(mydataA$DAY,mydataA$Y)
library(dplyr)
DataQA = read.table("D:\\covidDATA.txt")
modulo11=function(x) {x- floor(x/11)*11}
studentnumber=772586 # fill in your student number here, this is an example!
mycol=modulo11(studentnumber)
mydataA=DataQA[,c((1+mycol*4):(4+mycol*4))]
mydataA <- mutate(mydataA,day= as.numeric(mydataA$DATE.1))
mydataA <- mutate(mydataA,y= log(mydataA$NEW_IN.1+1))
plot(mydataA$day,mydataA$y)
View(mydataA)
fit1= lm(Y~DAY,family = poisson ,data=mydataA)
fit1= glm(y~day ,data=mydataA)
plot(fit1)
fit1= lm(y~day ,data=mydataA)
plot(fit1)
fit1= lm(y~day ,data=mydataA)
plot(fit1)
fit1= lm(y~day ,data=mydataA)
plot(fit1)
plot(mydataA$day,mydataA$y)
fit1= lm(y~day ,data=mydataA)
plot(fit1)
fit1= lm(y~day+day^2+day^3)
lines(date,fit1$fitted.values,col=2)
fit1= lm(y~day+day^2+day^3,data=mydataA)
lines(date,fit1$fitted.values,col=2)
lines(day,fit1$fitted.values,col=2)
lines(day,fit1$fitted.values,col=2)
fit1= lm(y~day+day^2+day^3,data=mydataA)
lines(day,fit1$fitted.values,col=2)
lines(mydataA$day,fit1$fitted.values,col=2)
fit1= lm(y~day+day^2+day^3,data=mydataA)
lines(mydataA$day,fit1$fitted.values,col=2)
attach(mydataA)
fit1= lm(y~day)
plot(fit1)
DataQA = read.table("D:\\covidDATA.txt")
modulo11=function(x) {x- floor(x/11)*11}
studentnumber=772586 # fill in your student number here, this is an example!
mycol=modulo11(studentnumber)
mydataA=DataQA[,c((1+mycol*4):(4+mycol*4))]
mydataA <- mutate(mydataA,day= as.numeric(mydataA$DATE.1))
mydataA <- mutate(mydataA,y= log(mydataA$NEW_IN.1+1))
attach(mydataA)
plot(day,y)
fit1= lm(y~day)
plot(fit1)
mycol=modulo11(studentnumber)
mydataA=DataQA[,c((1+mycol*4):(4+mycol*4))]
mydataA <- mutate(mydataA,day= as.numeric(mydataA$DATE.1))
mydataA <- mutate(mydataA,y= log(mydataA$NEW_IN.1+1))
attach(mydataA)
detach(mydataA)
library(dplyr)
DataQA = read.table("D:\\covidDATA.txt")
modulo11=function(x) {x- floor(x/11)*11}
studentnumber=772586 # fill in your student number here, this is an example!
mycol=modulo11(studentnumber)
mydataA=DataQA[,c((1+mycol*4):(4+mycol*4))]
mydataA <- mutate(mydataA,day= as.numeric(mydataA$DATE.1))
mydataA <- mutate(mydataA,y= log(mydataA$NEW_IN.1+1))
attach(mydataA)
plot(day,y)
fit1= lm(y~day)
plot(fit1)
fit1= lm(y~day+day^2+day^3)
lines(day,fitted.values,col=2)
fit1= lm(y~day+day^2+day^3)
lines(day,fitted.values,col=2)
lines(day,fit1.fitted.values,col=2)
lines(day,fit1$fitted.values,col=2)
fit1= lm(y~day)
plot(fit1)
fit2= lm(y~day+day^2+day^3)
lines(day,fit1$fitted.values,col=2)
plot(fit2)
fit3=lm(y~day+pmax(day-1,0)+pmax(day-3,0))
lines(day,fit3$fitted.values,col=2)
abline(v=1, lty=2);abline(v=3, lty=2)
fit4=lm(y~day+pmax(day-1,0)+pmax(day-3,0)+pmax(day-4,0))
lines(day,fit4$fitted.values,col=2)
abline(v=2, lty=2);abline(v=3, lty=2)
library(dplyr)
DataQA = read.table("D:\\covidDATA.txt")
modulo11=function(x) {x- floor(x/11)*11}
studentnumber=0772586 # fill in your student number here, this is an example!
mycol=modulo11(studentnumber)
mydataA=DataQA[,c((1+mycol*4):(4+mycol*4))]
mydataA <- mutate(mydataA,day= as.numeric(mydataA$DATE.1))
mydataA <- mutate(mydataA,y= log(mydataA$NEW_IN.1+1))
attach(mydataA)
plot(day,y)
View(mydataA)
fit2= lm(y~day+day^2+day^3)
lines(day,fit1$fitted.values,col=2)
plot(fit2)
fit1= lm(y~day)
lines(day,fit1$fitted.values,col=2)
plot(fit1)
fit1= lm(y~day)
lines(day,fit1$fitted.values,col=2)
plot(fit1)
fit2= lm(y~day+day^2+day^3)
lines(day,fit1$fitted.values,col=2)
plot(fit2)
fit3=lm(y~day+pmax(day-1,0)+pmax(day-3,0))
lines(day,fit3$fitted.values,col=2)
abline(v=1, lty=2);abline(v=3, lty=2)
fit3=lm(y~day+pmax(day-1,0)+pmax(day-3,0))
lines(day,fit3$fitted.values,col=2)
abline(v=1, lty=2);abline(v=3, lty=2)
plot(fit3)
summary(fit1)
fit1= glm(y~day)
lines(day,fit1$fitted.values,col=2)
summary(fit1)
fit2= glm(y~day+day^2+day^3)
lines(day,fit1$fitted.values,col=2)
summary(fit1)
fit1= glm(y~day)
lines(day,fit1$fitted.values,col=2)
summary(fit1)
plot(day,y)
fit1= glm(y~day,family="gaussian")
lines(day,fit1$fitted.values,col=2)
summary(fit1)
plot(fit1)
fit2= glm(y~day+day^2+day^3)
lines(day,fit1$fitted.values,col=2)
plot(fit2)
fit2= glm(y~day+day^2+day^3)
lines(day,fit1$fitted.values,col=2)
summary(fit2)
fit1= glm(y~day)
lines(day,fit1$fitted.values,col=2)
summary(fit1)
fit2= glm(y~day+day^2+day^3)
lines(day,fit1$fitted.values,col=2)
summary(fit2)
fit3= glm(y~day+day^2)
lines(day,fit1$fitted.values,col=2)
summary(fit3)
fit4=lm(y~day+pmax(day-1,0)+pmax(day-3,0))
lines(day,fit3$fitted.values,col=2)
abline(v=1, lty=2);abline(v=3, lty=2)
summary(fit3)
fit5=spm(y~ f(day,basis="trunc.poly", degree=2))
summary(fit5)
?spm
??spm
library("SemiPar")
library(SemiPar)
install.packages("SemiPar")
library(SemiPar)
fit5=spm(y~ f(day,basis="trunc.poly", degree=2))
summary(fit5)
plot(fit5)
library(mgcv)
fit3=gam(y~ s(day,bs="cr"))
summary(fit3)
fit3=gam(y~ s(day),family=Gamma(link=log))
summary(fit3)
library(dplyr)
DataQA = read.table("D:\\covidDATA.txt")
modulo11=function(x) {x- floor(x/11)*11}
studentnumber=0772586 # fill in your student number here, this is an example!
mycol=modulo11(studentnumber)
mydataA=DataQA[,c((1+mycol*4):(4+mycol*4))]
mydataA <- mutate(mydataA,day= as.numeric(mydataA$DATE.1))
#mydataA <- mutate(mydataA,y= log(mydataA$NEW_IN.1+1))
attach(mydataA)
plot(day,y)
fit2=spm(new~ f(date,basis="trunc.poly", degree=2))
library(mgcv)
fit3=gam(y~ s(day),family=Gamma(link=log))
summary(fit3)
plot(fit2)
library(mgcv)
fit3=gam(y~ s(day),family=Gamma(link=log))
summary(fit3)
plot(fit3)
plot(day,y)
library(mgcv)
fit3=gam(y~ s(day),family=Gamma(link=log))
summary(fit3)
plot(fit3)
gam.fit
?gam
library(mgcv)
fit3=gam(y~ s(day),family=gaussian(link=identity))
summary(fit3)
plot(fit3)
?gam
library(dplyr)
DataQA = read.table("D:\\covidDATA.txt")
modulo11=function(x) {x- floor(x/11)*11}
studentnumber=0772586 # fill in your student number here, this is an example!
mycol=modulo11(studentnumber)
mydataA=DataQA[,c((1+mycol*4):(4+mycol*4))]
mydataA <- mutate(mydataA,day= as.numeric(mydataA$DATE.1))
mydataA <- mutate(mydataA,y= log(mydataA$NEW_IN.1+1))
attach(mydataA)
plot(day,y)
#fit2=spm(new~ f(date,basis="trunc.poly", degree=2))
library(mgcv)
fit3=gam(y~ s(day),family=gaussian(link=identity))
summary(fit3)
plot(fit3)
?gam
library(dplyr)
DataQA = read.table("D:\\covidDATA.txt")
modulo11=function(x) {x- floor(x/11)*11}
studentnumber=0772586 # fill in your student number here, this is an example!
mycol=modulo11(studentnumber)
mydataA=DataQA[,c((1+mycol*4):(4+mycol*4))]
mydataA <- mutate(mydataA,day= as.numeric(mydataA$DATE.1))
mydataA <- mutate(mydataA,y= log(mydataA$NEW_IN.1+1))
attach(mydataA)
plot(day,y)
#fit2=spm(new~ f(date,basis="trunc.poly", degree=2))
library(mgcv)
fit3=gam(y~ s(day),family=gaussian(link=identity))
summary(fit3)
plot(fit3)
fit4=gam(y~ te(day),family=gaussian(link=identity))
summary(fit4)
plot(fit4)
fit4=gam(y~ te(day),family=gaussian(link=identity))
summary(fit4)
plot(fit4)
fit5=gam(y~ ti(day),family=gaussian(link=identity))
summary(fit5)
plot(fit5)
fit6=gam(y~ t2(day),family=gaussian(link=identity))
summary(fit6)
plot(fit6)
?gam
fit6=gam(y~ t2(day),family=gaussian(link=identity),method = "REML")
fit3=gam(y~ s(day),family=gaussian(link=identity),method = "REML")
summary(fit3)
plot(fit3)
plot(fit3)
fit4=gam(y~ te(day),family=gaussian(link=identity),method = "REML")
summary(fit4)
plot(fit4)
fit5=gam(y~ ti(day),family=gaussian(link=identity),method = "REML")
summary(fit5)
plot(fit5)
fit6=gam(y~ t2(day),family=gaussian(link=identity),method = "REML")
summary(fit6)
plot(fit6)
?gam
library(mgcv)
fit3=gam(y~ s(day),family=gaussian(link=identity),method = "GCV.Cp")
summary(fit3)
fit4=gam(y~ te(day),family=gaussian(link=identity),method = "GCV.Cp")
summary(fit4)
plot(fit4)
library(mgcv)
fit3=gam(y~ s(day),family=gaussian(link=identity),method = "ML")
summary(fit3)
plot(fit3)
fit4=gam(y~ te(day),family=gaussian(link=identity),method = "ML")
summary(fit4)
plot(fit4)
AIC(fit3)
AIC(fit4)
AIC(fit5)
AIC(fit6)
fit3=gam(y~ s(day),family=gaussian(link=identity),method = "REML")
summary(fit3)
AIC(fit3)
fit4=gam(y~ te(day),family=gaussian(link=identity),method = "REML")
summary(fit4)
AIC(fit4)
fit5=gam(y~ ti(day),family=gaussian(link=identity),method = "REML")
summary(fit5)
AIC(fit5)
fit6=gam(y~ t2(day),family=gaussian(link=identity),method = "REML")
summary(fit6)
AIC(fit6)
AIC(fit5)
AIC(fit6)
plot(day,y)
fit3= glm(y~day^2)
lines(day,fit1$fitted.values,col=2)
summary(fit3)
fit1= glm(y~day)
lines(day,fit1$fitted.values,col=2)
summary(fit1)
fit1= glm(y~day,family=gaussian)
lines(day,fit1$fitted.values,col=2)
summary(fit1)
fit1= glm(y~day,family=gamma)
lines(day,fit1$fitted.values,col=2)
summary(fit1)
fit1= glm(y~day,family=poission)
lines(day,fit1$fitted.values,col=2)
summary(fit1)
?glm
fit1= glm(y~day,family=Gamma(link="inverse"))
lines(day,fit1$fitted.values,col=2)
summary(fit1)
library(mgcv)
fit3=gam(y~ s(day),family=gaussian(link=identity),method = "REML")
summary(fit3)
AIC(fit3)
fit3=gam(y~ s(day),family=gaussian(link=identity),method = "REML")
summary(fit3)
AIC(fit3)
plot(fit3)
library(splines)
